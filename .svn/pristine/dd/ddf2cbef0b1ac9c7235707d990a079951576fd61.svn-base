#-*-coding:utf-8-*-
from wtforms import StringField,SubmitField,PasswordField,BooleanField,SelectField
from flask_wtf import FlaskForm,Form
from wtforms.validators import DataRequired,Required,Regexp,Length,EqualTo,Email
#登录表单
class LoginForm(Form):
	username = StringField(u'用户名',validators=[DataRequired(),Length(5,32)])
	password = PasswordField(u'密码',validators=[DataRequired(),Length(5,32)])
	remember = BooleanField(u'记住密码',default=False)
	submit = SubmitField(u'登录')
 

    
#竞品表单
class ComproductForm(FlaskForm):
    search = StringField(u'搜索')
    assetnumber = StringField(u'资产编号',validators=[DataRequired()])
    product_name = StringField(u'品牌',validators=[DataRequired()])
    model_name = StringField(u'规格型号',validators=[DataRequired()])
    numbers = StringField(u'现存数量',validators=[DataRequired()])
    position = StringField(u'储位',validators=[DataRequired()])
    status = StringField(u'状态',validators=[DataRequired()])
    username = StringField(u'借机人')
    usermail = StringField(u'借机邮箱')
    lend_time = StringField(u'借机时间')
    lend_numbers = StringField(u'借机数量')
    back_time = StringField(u'归还时间')
    remark = StringField(u'备注')
    profit_loss = StringField(u'盘盈/盘亏',validators=[DataRequired()])
    submit = SubmitField(u'提交')
    cancel = SubmitField(u'重置')
    
#添加固定资产
class Com(FlaskForm):
    assetnumber = StringField(u'资产编号：',validators=[DataRequired()])
    product_name = StringField(u'品牌：',validators=[DataRequired()])
    model_name = StringField(u'规格型号：',validators=[DataRequired()])
    numbers = StringField(u'现存数量：',validators=[DataRequired()])
    position = StringField(u'储位：',validators=[DataRequired()])
    status = SelectField(u'状态：',validators=[DataRequired()])
    username = StringField(u'借机人：',validators=[DataRequired()])
    usermail = StringField(u'借机人邮箱：',validators=[DataRequired()])
    lend_time = StringField(u'借机时间：',validators=[DataRequired()])
    lend_numbers = StringField(u'借机数量：',validators=[DataRequired()])
    back_time = StringField(u'预计归还时间：',validators=[DataRequired()])
    mark = StringField(u'备注：',validators=[DataRequired()])
    profit_loss = StringField(u'盘盈/盘亏',validators=[DataRequired()])
    
#添加低损耗
class Cost(FlaskForm):
    assetnumber = StringField(u'资产编号：',validators=[DataRequired()])
    product_name = StringField(u'品牌：',validators=[DataRequired()])
    model_name = StringField(u'规格型号：',validators=[DataRequired()])
    numbers = StringField(u'现存数量：',validators=[DataRequired()])
    position = StringField(u'储位：',validators=[DataRequired()])
    status = StringField(u'状态：',validators=[DataRequired()])
    username = StringField(u'借机人：',validators=[DataRequired()])
    usermail = StringField(u'借机人邮箱：',validators=[DataRequired()])
    lend_time = StringField(u'借机时间：',validators=[DataRequired()])
    lend_numbers = StringField(u'借机数量：',validators=[DataRequired()])
    back_time = StringField(u'预计归还时间：',validators=[DataRequired()])
    mark = StringField(u'备注：',validators=[DataRequired()])
    profit_loss = StringField(u'盘盈/盘亏',validators=[DataRequired()])
    
#注册普通账户
class RegisterForm(FlaskForm):
    name = StringField(u'用户名',validators=[DataRequired(),Length(1,30)])
    username = StringField(u'用户名'，validators=[DataRequired(),Length(5,32),Regexp（'^[a-z_A-Z0-9]*$',message=u'用户名只能包含数字字母和下划线'）])
    password = PasswordField(u'密码',validators=[DataRequired(),Length(5,32),Regexp（'^[a-z_A-Z0-9]*$',message=u'密码只能包含数字字母和下划线'）])
    password2 = PasswordField(u'确认密码',validators=[Datarequired(),EqualTo('password')])
    # email = StringField('Email',validators=[DataRequired(),Length(5,32)])
    submit = SubmitField(u'保存')
    def validate_username(self,field):
        if User.query.filter_by(username=field.data).first():
            raise ValidationError(u'用户名已存在')
#管理员账户重置密码表单
class ResetPasswordForm(FlaskForm):
    name = StringField(u'用户名',validators=[DataRequired(),Length(5,32)])
    email = StringField(u'Email',validators=[DataRequired(),Length(1,64),Email()])
    changepwd = BooleanField(u'更改密码',default=False)
    oldpassword = PasswordField(u'旧密码',validators=[DataRequired(),Length(5,32)])
    newpassword = PasswordField(u'新密码',validators=[DataRequired(),Length(5,32),EqualTo('confirmpwd',message='Passwords must match')])
    confirmpwd = PasswordField(u'确认密码',validators=[DataRequired(),Length(5,32)])
    submit = SubmitField(u'保存')            