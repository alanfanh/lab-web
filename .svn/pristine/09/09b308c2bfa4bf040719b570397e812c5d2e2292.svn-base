#-*-coding:utf-8-*-
from flask import Flask,render_template,request,flash,Blueprint,redirect,url_for
from flask_login import login_user,logout_user,UserMixin,login_required
from .forms import LoginForm,ChangePasswordForm,RegisterForm,ComproductForm
from ..models import User,Comproduct
from . import admin
from .. import db
import json
# from flask_sqlalchemy import paginate
@admin.route('/')
def index():
    # loginForm=LoginForm()
    # return render_template('login.html',loginForm=loginForm)
    return redirect('/login')
    
@admin.route('/main')
@login_required
def main():
    # user = User.query.filter_by(name=username).first()
    # if user is None:
        # abort(404)
    return render_template('main.html')
 
#登录用户 
@admin.route('/login', methods=['GET', 'POST'])
def login():
    if current_user.is_authenticated:
        return redirect(url_for('main'))
    form=LoginForm()
    if form.validate_on_submit():
        username = form.username.data
        password = form.password.data
        remember = form.remenber.data
        user = User.query.filter_by(username=form.username.data).first()
        if user:
            if username == user.username and user.validate_password(password):
                login_user(user,remember)
                flash(u'登录成功')
                return redirect(url_for('admin.main'))
            elif not user.validate_password(password):
                flash(u'密码错误')
        else:
            flash(u'用户不存在')
    return render_template('login.html',form=form)    
 #退出登录      
@admin.route('/logout')
@login_required
def logout():
    logout_user()
    flash(u'你已退出登录')
    loginForm=LoginForm()
    # return render_template('login.html',loginForm=loginForm)
    return redirect(url_for('admin.index'))
 
#管理员账户重置密码
@admin.route('/reset-password/<int:id>',methods=['GET','POST'])
@login_required
def reset_password(id):
    user = User.query.get_or_404(id)
    form = ChangePasswordForm()
    print "form=",form
    # user.changepwd = form.changepwd.data
    # print "user.changepwd=",user.changepwd
    # if changeForm.validate_on_submit():
        # user.email = form.email.data
        # user.name = form.name.data
        # user.oldpassword = form.oldpassword.data
        # user.newpassword = form.newpassword.data
        # user.confirmpwd = form.confirmpwd.data
        # user.changepwd = form.changepwd.data
        # user = User.query.filter_by(id=id).update({'pwd':pwd,'email':email})
        # db.session.commit()
        # flash(u'密码修改成功,请重新登录')
        # return redirect(url_for('logout'))
    # form.email.data = user.email
    # form.name.data = user.name
    return render_template('changepwd.html',form=form,user=user)
    
#普通用户管理列表
@admin.route('/register')
@login_required
def register():
    userlist = User.query.all()
    #从用户列表中移除管理员用户,只显示普通用户
    for user in userlist:
        if user.name == 'admin':
           userlist.remove(user)
    return render_template('registerlist.html',userlist=userlist)
#添加普通用户
@admin.route('/register/add',methods=['GET','POST']) 
@login_required
def register_add():
    form = RegisterForm()
    if form.validate_on_submit():
        name = form.name.data
        username = form.username.data
        password = form.password.data
        user = User(name=name,username=username)
        #设置密码
        user.set_password(password)
        db.session.add(user)
        db.session.commit()
        flash('添加成功')
        return redirect('/register')
    return render_template('registeradd.html',form=form)
#编辑普通用户
@admin.route('/register/edit/<int:id>',methods=['GET','POST']) 
@login_required
def register_edit(id):
    form = RegisterForm()
    if request.method == 'GET':
        user = User.query.filter_by(id = id).first_or_404()
        return render_template('registeredit.html',form=form,user=user)
    else:
        # if form.validate_on_submit():
        user = User.query.filter_by(id=id).first()
        user.pwd = request.form['pwd']
        user.email = request.form['email']
        db.session.commit()
        flash('修改成功')
        return redirect(url_for('admin.register'))
#删除普通用户
@admin.route('/register/del/<int:id>',methods=['GET','POST']) 
@login_required
def register_del(id):
    user=User.query.filter_by(id=id).delete()
    db.session.commit()
    # return '',204
    res = {'status':1,"message":"success"}
    user=User.query.filter_by(id=id).first()
    if user:
        res['status'] = 0
        res['message'] = 'error'
        return json.dumps(res)
    return json.dumps(res)
#竞品列表
@admin.route('/main#comproduct')
@login_required
def comproduct():
    # cmplist = Comproduct.query.all()
    page = request.args.get('page',1,type=int)
    pagination = Comproduct.query.paginate(page,per_page=10,error_out=False)
    cmplist = pagination.items
    form = ComproductForm()
    return render_template('cmplist.html',cmplist=cmplist,pagination=pagination,form=form)
#竞品添加
@admin.route('/main/comproduct/add',methods=['GET','POST'])
@login_required
def cmpadd():
    form = ComproductForm()
    if request.method == 'GET':
        return render_template('cmpadd.html',form=form)
    else:
        print "+++++++++++start post++++++++++++++++"
        assetnumber = request.form['assetnumber']
        print "assetnumber=",assetnumber
        product_name = request.form['product_name']
        print "product_name=",product_name
        model_name = request.form['model_name']
        print "model_name=",model_name
        numbers = request.form['numbers']
        print "numbers=",numbers
        position = request.form['position']
        print "position=",position
        status = request.form['status']
        print "status=",status
        username  = request.form['username']
        print "username=",username
        usermail = request.form['usermail']
        print "usermail=",usermail
        lend_time = request.form['lend_time']
        print "lend_time=",lend_time
        lend_numbers = request.form['lend_numbers']
        print "lend_numbers=",lend_numbers
        back_time  = request.form['back_time']
        print "back_time=",back_time
        remark  = request.form['remark']
        print "remark=",remark
        profit_loss = request.form['profit_loss']
        print "profit_loss=",profit_loss
        # if addForm.validate_on_submit():    
        print "**************start add****************"
        cmp=Comproduct(assetnumber=assetnumber,product_name=product_name,model_name=model_name,numbers=numbers,position=position,status=status,username=username,usermail=usermail,lend_time=lend_time,lend_numbers=lend_numbers,back_time=back_time,remark=remark,profit_loss=profit_loss)
        print "cmp=",cmp
        db.session.add(cmp)
        db.session.commit()
        print "*************end************"
        return redirect('/main#comproduct') 
#竞品编辑
@admin.route('/main#comproduct/edit/<int:id>',methods=['GET','POST'])
@login_required       
def cmpedit(id):
    form = ComproductForm()
    if request.method == "GET":
        cmp = Comproduct.query.filter_by(id=id).first_or_404()
        return render_template('cmpedit.html',form=form,cmp=cmp)
    else:
        cmp = Comproduct.query.filter_by(id=id).first()
        cmp.assetnumber = request.form['name']
        cmp.product_name = request.form['product_name']
        cmp.model_name = request.form['model_name']
        cmp.numbers = request.form['numbers']
        cmp.position = request.form['position']
        cmp.status = request.form['status']
        cmp.username  = request.form['username ']
        cmp.usermail = request.form['usermail']
        cmp.lend_time = request.form['lend_time']
        cmp.lend_numbers = request.form['lend_numbers']
        cmp.back_time  = request.form['back_time']
        cmp.remark  = request.form['remark']
        cmp.profit_loss = request.form['profit_loss']
        db.session.commit()
        return redirect(url_for('admin.comproduct'))
#竞品删除
@admin.route('/main#comproduct/del/<int:id>',methods=['GET','POST'])
@login_required
def cmpdel(id):
    cmp=Comproduct.query.filter_by(id=id).delete()
    db.session.commit()
    res = {'status':1,"message":"success"}
    cmp=Comproduct.query.filter_by(id=id).first()
    print "************user=",user
    if cmp:
        res['status'] = 0
        res['message'] = 'error'
        return json.dumps(res)
    return json.dumps(res)
#竞品查询
@admin.route('/main#comproduct/del/<int:id>',methods=['GET','POST'])
@login_required
def query():
    page = request.args.get('page',1,type=int)
    pagination = Comproduct.query.paginate(page,per_page=10,error_out=False)
    cmplist = pagination.items
    form = ComproductForm()
    return render_template('cmplist.html',cmplist=cmplist,pagination=pagination,form=form)
#导出竞品
    